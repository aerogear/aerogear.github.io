---
layout: post
section: guides
title: Digger and RHMAP
toc_generate: true
---

== Overview

The main purpose of this document is to explain how AeroGear Digger and RedHat Mobile Application Platform (RHMAP) work together to build mobile applications on OpenShift.

If you are using AeroGear Digger on its own, feel free to skip the content of this document.

== Setup

At the time of writing this document (Aug 2017), the self-managed RHMAP is not using AeroGear Digger as the default build farm. It is using the SaaS version build farm by default to build mobile applications.

However, from release version 4.5 of RHMAP, admin users will be able to install AeroGear Digger as part of RHMAP installation, and use it as the default build farm. 
For more details, please check the link:/docs/digger/installation[Installation Guide].

After the setup is completed, developers will also need to make sure there are corresponding `Jenkinsfile` in the apps for Jenkins to build them.
More details can be found in the link:/docs/digger/developer[Developer Guide].

Once that's done, developers will be able to build mobile apps using AeroGear Digger through RHMAP.

== App Build Request Sequences

The following diagram explains what happens when a build request is triggered by a client on RHMAP:

image::./img/app_build_request.png[App Build Request]

It can be divided into 3 stages:

=== Pre-build

This stage includes all the steps before the build is started on Jenkins. 

During this stage, RHMAP will make sure all the required resources are gathered, and the corresponding Jenkins job is updated to reflect the currect status of the project on RHMAP.
For all the keys and certificates that are required for the build, RHMAP will also make sure they are saved in the Jenkins credential store.

=== Build

This stage includes all the steps from when the build is started on Jenkins, until the build is completed.

During this stage, the build is done by Jenkins and RHMAP will just poll the logs from Jenkins and present the logs to the client.

=== Post-build

This stage includes all the steps from when the build is completed on Jenkins, until the request is fully completed.

During this stage, RHMAP will make sure the link to the generated binaries are saved on the platform, and also remove the keys and certificates from the Jenkins credential store.

== Q & A

=== How keys and certs are managed by RHMAP and AeroGear Digger?

When developers upload keys and certs to RHMAP, they are saved in the database without encryption. 
However, RHMAP does require the private key to be password protected when it's being uploaded, and it will ask for the password to decrypt the private key file to continue the build process.

Before a build is started, RHMAP will send the keys and certificates to Jenkins and save them in Jenkins credentials store. 
However, the original password entered by the developer is not sent. RHMAP will use a different password instead.

When the build is completed, RHMAP will make sure the corresponding credential is removed from Jenkins.

[[rhmap-environment-variables]]
== RHMAP Environment Variables

When using Digger from RHMAP, you can configure Digger by setting RHMAP Environment variables in the `millicore` deployment configuration.

.RHMAP properties
|===
| Property name | Environment variable | Description

| buildfarm_version
| BUILDFARM_VERSION
| The version of the Build Farm being used. Should be set to `2.0.0` when
using Digger.

| buildfarm_hostname
| BUILDFARM_HOST
| The hostname of the Jenkins instance that was provisioned by Digger.

| buildfarm_username
| BUILDFARM_USERNAME
| The username used to authenticate with the Jenkins instance.

| buildfarm_password
| BUILDFARM_PASSWORD
| Password for the username defined in `buildfarm_username`.

| buildfarm_platforms
| BUILDFARM_PLATFORMS
| The mobile platforms to build using the Jenkins instance. Must be a comma separated list e.g. `android,ios`. Valid values: `ios`,`android`.

| buildfarm_build_properties
| BUILDFARM_BUILD_TIMEOUT
| The number of seconds that RHMAP will wait before timing out a build.

| buildfarm_build_polling_interval
| BUILDFARM_BUILD_POLLING_INTERVAL
| The number of seconds between each poll of a Jenkins build.

| buildfarm_csrf_enabled
| BUILDFARM_CSRF_ENABLED
| CSRF protection. Recommended setting: Enabled

| buildfarm_builds_days
| BUILDFARM_BUILDS_DAYS
| The number of days to keep builds in Jenkins.

| buildfarm_builds_total
| BUILDFARM_BUILDS_TOTAL
| The maximum number of builds to keep in Jenkins.

| buildfarm_artifacts_days
| BUILDFARM_ARTIFACTS_DAYS
| The number of days to keep build artifacts in Jenkins.

| buildfarm_artifacts_total
| BUILDFARM_ARTIFACTS_TOTAL
| The maximum number of build artifacts to keep in Jenkins.
|===





