[[macos-prereqs]]
==== macOS prerequisites (optional)

.Recommended specifications:

* A fresh macOS 10.12 Sierra install (MacinCloud service can be used, too)
* 4GB RAM
* 2 CPU Cores
* 30GB minimum disk space and and additional 20GB per installed XCode version


===== Create SSH User for Ansible

Ansible requires an SSH access to the macOS server in order to correctly provision the server to support iOS builds. Create a user with sudo permissions and SSH access on the macOS server. 

An example bash script is provided.

WARNING: Review the script before using it. The unmodified script will allow access to your machine with a default password. Change the default `PASSWORD` and ensure that `USER_ID` is unassigned.

By default, the script will create a user named `jenkins` with `USER_ID=550` and add the user to the the `sudoers` file. The user's `PASSWORD` is set by default to `Password1`. The user is added to the `admin` group.

IMPORTANT: Restart the server to implement the changes.

Download and execute the script with the following commands:
[source,bash]
----
curl -O https://raw.githubusercontent.com/aerogear/aerogear-digger/master/admin/create-osx-user.sh
sudo bash create-osx-user.sh
----

[source,bash]
----
#!/usr/bin/env bash

USERNAME="jenkins"
PASSWORD="Password1"
REAL_NAME="Jenkins Agent"
GROUP_NAME="staff"

# the first user's id is 500, second is 501 ...
# picking a big number to be on the safe side.
# You can run this one to list UIDs
#   dscl . -list /Users UniqueID
USER_ID=550

# GID 20 is `staff`
GROUP_ID=20

############### end of parameters

. /etc/rc.common
dscl . create /Users/${USERNAME}
dscl . create /Users/${USERNAME} RealName ${REAL_NAME}
dscl . passwd /Users/${USERNAME} ${PASSWORD}

dscl . create /Users/${USERNAME} UniqueID ${USER_ID}
dscl . create /Users/${USERNAME} PrimaryGroupID ${GROUP_ID}
dscl . create /Users/${USERNAME} UserShell /bin/bash
dscl . create /Users/${USERNAME} NFSHomeDirectory /Users/${USERNAME}
dseditgroup -o edit -a ${USERNAME} -t user admin
cp -R /System/Library/User\ Template/English.lproj /Users/${USERNAME}
chown -R ${USERNAME}:${GROUP_NAME} /Users/${USERNAME}

echo "${USERNAME}  ALL=(ALL:ALL) ALL" >> /etc/sudoers

echo "Done creating OSX user - you may need to restart the osx server to apply all changes for the user ${USERNAME}"
----


===== Configure Remote Login
Enable the remotely running Ansible process to execute commands on the macOS server via SSH.

A sample script is provided below. The `USERNAME` variable should contain the name of the user created in the previous step.
This allows the `USERNAME` to access the server via SSH with a password. 

WARNING: Review and understand the script before using it.

You can also add a public encryption key to the `authorized_keys` file associated with the user, with the private key of the asymmetric key pair present on the Ansible management node.

The script can be downloaded and executed using the following commands:

[source,bash]
----
curl -O https://raw.githubusercontent.com/aerogear/aerogear-digger/master/admin/enable-osx-remote-login.sh
sudo bash enable-osx-remote-login.sh
----

[source,bash]
----
#!/usr/bin/env bash

# This script helps with enabling SSH for given OSX user.
# This script is not meant to be run in an automation. Run it manually.

USERNAME="jenkins"

# com.apple.access_ssh is a special group name on OSX.
# any user part of that group can have SSH connections in.
OSX_SSH_GROUP_NAME="com.apple.access_ssh"

systemsetup -setremotelogin on
# in order to check what groups are are there:
#   dscl . list /Groups PrimaryGroupID
# create a group for limiting SSH access
dseditgroup -o create -q ${OSX_SSH_GROUP_NAME}
# add user into this group
dseditgroup -o edit -a ${USERNAME} -t user ${OSX_SSH_GROUP_NAME}
# now, following should work  ---> ssh username@localhost
----

===== Ansible root Permissions

A number of tasks in the `provision-osx` Ansible role used in the installer require http://docs.ansible.com/ansible/latest/become.html[privilege escalation^].
This allows Ansible to run commands as `sudo` user.

Add the name of the user created in previous steps as a variable `ansible_ssh_user` into the Ansible inventory file.

Set `ansible_sudo_pass` variable or `--ask-sudo-pass` flag with the user password to enable the installer to work with root permissions.

===== macOS Internet Access

The macOS requires Internet access to the following hosts:

IMPORTANT: Other external hosts may be required depending on what other packages you specify to install.

.Hosts and resources they provide:
|===
| Hostname | Provides

| https://github.com
| `Homebrew packages` and `Cocoapods`

| https://raw.githubusercontent.com
| `NVM - Node Version Manager`

| https://rvm.io
| `RVM - Ruby Version Manager`

| http://developer.apple.com
| `Apple Certificates` and `Xcode`

| https://npmjs.org
| `NPM packages`
|===