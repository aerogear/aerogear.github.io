[[run-digger-installer]]
=== Run Digger Installer

. Clone https://github.com/aerogear/aerogear-digger-installer[Digger Installer GitHub repo^].

. Make a copy of the Ansible https://github.com/aerogear/aerogear-digger-installer/blob/master/inventory-sample[inventory-sample^], and update it with information about your infrastructure.

+
NOTE: For a full list of variables that can be configured via the inventory file, refer to <<installer-variables>>.

. Use one of these commands to run the playbook and follow the instructions printed in the terminal:
//+
//Refer to https://github.com/aerogear/aerogear-digger-installer/blob/master/sample-build-playbook.yml[Digger Playbook^] to see the roles executed during installation and their associated tags.

** Commands to install Digger with macOS server
+
WARNING: Ensure your macOS Server is prepared for installation. See link:macos-prereqs[macOS Prerequisities].
+
One of the steps is to update the inventory file with the required macOS variables.
+
Modify and use the following command if you did not set the required macOS variables:
+
----
ansible-playbook -i sample-inventory-file sample-playbook.yml
-e "ansible_sudo_pass=exampleSudoPassword"
-e "xcode_install_user=exampleAppleDeveloperUsername"
-e "xcode_install_password=exampleAppleDeveloperPassword"
-e "credential_private_key_path=/path/to/sshKey"
-e "credential_passphrase=exampleSshKeyPassphrase"
-e "credential_public_key_path=/path/to/sshKey.pub"
--tags="provision-osx"
----
+
Use the following command if you have set the required macOS variables manually:
+
----
ansible-playbook -i <your-inventory-sample> sample-build-playbook.yml
----
+
** Command to install Digger without a macOS server
+
----
ansible-playbook -i <your-inventory-sample> sample-build-playbook.yml --skip-tags=provision-osx
----
WARNING: As of Jan 4th 2018, only `provision-osx` tag is working with with `--skip-tags`.

+
//** Roles can be run individually or in batch with flag //--tags=<role_tag_1>,...,<role_tag_x>
//+
//----
//ansible-playbook -i <your-inventory-sample> sample-build-playbook.yml //--tags=provision-osx,nagios
//----
//** To skip default roles, similarly to --skip-tags=provision-osx e.g. //--skip-tags=<role_tag_1>,...,<role_tag_x>
//+
//----
//ansible-playbook -i <your-inventory-sample> sample-build-playbook.yml //--skip-tags=provision-osx,nagios,java
//----
. Perform nonautomated tasks manually:
+
.. Accept Android SDK licence
- During initial Android SDK installation
- During sync of Android SDK versions
.. If you are provisioning a macOS Server: 
- Copy server's public SSH key(server that is running Ansible) into Jenkins Slave running on macOS server
- Accept the Oracle License when installing Java on macOS server
+


.The Ansible playbook will perform the following tasks:

* Check if the required Java version is installed, install/upgrade if not,
* Create an OpenShift project,
* Install Jenkins (Master) on OpenShift,
* Install Android SDK to a Persistent Volume,
* Configure Jenkins Master,
* Setup macOS Server(s) (optional). link:macos-prereqs[Manual pre-provisioning is required.]
* Install Nagios on OpenShift,
* Print URL and credentials for Jenkins and Nagios.

//NOTE: All tasks are idempotent. You can run the tasks multiple times and they will produce the same results.