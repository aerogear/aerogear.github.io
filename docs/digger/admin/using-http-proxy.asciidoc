== Using HTTP/HTTPS Proxy with Aerogear Digger

If you choose to install the Digger behind proxy, the installer will automatically configure the following components to use the proxy (if they require an outbound internet access):

* The Jenkins server
* The Android SDK pod used to download Android SDKs
* Container/node that will run the build jobs, by adding the appropriate environment variables like `HTTP_PROXY` and `HTTPS_PROXY` in the inventory file. 
Sample provided in https://github.com/aerogear/digger-installer/blob/master/inventory-sample[AeroGear Digger GitHub repo].
* Ansible to install various tools used to provision the macOS servers

These changes allow the default build tools (Gradle, XCode) to use HTTP proxy without authentication.

=== Ansible Variables Regarding HTTP/HTTPS Proxy

You can run AeroGear Digger behind a HTTP proxy server by setting the following Ansible Variables:

|===
| Variable name | Description
| proxy_url
| This URL is pasted into `http_proxy` and `https_proxy` environment variables.
| proxy_host
| The host name of the proxy server. The URL should be `<host>:<port>` not `<protocol>//:<host>:<port>`, e.g. `127.0.0.1:8080`
| proxy_port
| The port number of the proxy
| proxy_user
| Required if proxy authentication is enabled
| proxy_pass
| Required if proxy authentication is enabled
| proxy_protocol
| Optional. The protocol to use with the proxy. Default value is `http`.
|===

You can define these variables either in an inventory file, or via CLI.
Please refer to the http://docs.ansible.com/ansible/playbooks_variables.html[Ansible Playbook Variables Docs] for more details.

WARNING: HTTP Proxies that require authentication are not supported.
Please check the link:known_issues[Known Issues] for more details.

=== Using external tools with HTTP/HTTPS Proxy

If you want to use the external tools with HTTP/HTTPS proxy, you will have to update the configuration for those tools manually in the Jenkinsfile, using the values from the environment variables like `HTTP_PROXY` and `HTTPS_PROXY`.