// ---
// layout: basic
// title: UnifiedPush Server - Deploying UPS & Keycloak in separated instances
// ---

[[keycloak-decoupling]]
== Deploying UPS & Keycloak in separated instances

The following scenarios were tested against WildFly 9 and Keycloak 1.7.0.Final/1.8.0.CR3. The whole setup is based on the usage of scripts located under *$UPS_HOME/bin* folder.

Also, the folder includes a preconfigured realm template file for Keycloak.

=== Requirements

* link:http://download.jboss.org/wildfly/9.0.2.Final/wildfly-9.0.2.Final.tar.gz[ WildFly 9.0.2.Final]
* link:http://keycloak.jboss.org/downloads-archive[Keycloak 1.7.0.Final] or link:http://keycloak.jboss.org/downloads[superior]

=== Command line arguments

All the command line arguments are documented just running the scripts under *$UPS_HOME/bin*. But just in case:

==== $UPS_HOME/bin/keycloak-setup.sh

[width="80%",cols="3,^4",options="header"]
|=========================================================
|Option |Description

|-s, --ups-host|WildFly HTTPS address where UPS is deployed
|-i, --realm-import|Realm JSON file to be imported to Keycloak
|-o, --offset|Port offset to start WildFly in a different port on the same machine
|-h, --help|Help
|=========================================================

Note: These scripts are pretty much based on *jboss-cli.sh* and can be ported  to any OS.

==== ups-setup.sh

[width="80%",cols="3,^4",options="header"]
|=========================================================
|Option |Description

|-s, --ups-host|WildFly HTTP management port where UPS is deployed
|-r, --realm|Realm name
|    --subsystem-setup|link:Keycloak subsystem setup[http://keycloak.github.io/docs/userguide/keycloak-server/html/ch08.html#jboss-adapter-installation]
|-h, --help|Help
|=========================================================


Note: These scripts are pretty much based on *jboss-cli.sh* and can be ported  to any OS.

=== Scenario 1: Deploying Keycloak and UPS in separated WildFly instances

image:img/keycloak-one-to-one.png[One to One relationship]

==== Keycloak setup

1. Deploy Keycloak following link:http://keycloak.github.io/docs/userguide/keycloak-server/html/server-installation.html[these instructions]

2. Import the realm configuration file and start WildFly in a separate port

  $UPS_HOME/bin/keycloak-setup.sh --ups-host=http://localhost:8082 --wildfly-offset=3 --realm-import=$UPS_HOME/bin/ups-realm-template.json

3. Keycloak server should start with *aerogear* realm imported

==== UPS setup

1. Follow the setup instructions described link:https://aerogear.org/docs/unifiedpush/ups_userguide/index/#server-installation[here].

2. Setup the Keycloak subsystem

  $UPS_HOME/bin/ups-setup.sh --subsystem-setup

3. Start WildFly in a separate port

  $WILDFLY_HOME/bin/standalone.sh -Djboss.socket.binding.port-offset=2 --server-config=standalone-full.xml

4. Setup UPS instance to properly be attached to Keycloak instance

  $UPS_HOME/bin/ups-setup.sh --ups-host=localhost:9992 --realm=aerogear --auth-server=http://localhost:8083

5. Deploy the UnifiedPush server


=== Scenario 2: One Keycloak server to multiple instances of UPS

The following setup covers scenarios where people wants to have multiple WildFly instances of UPS authenticating against just one server running Keycloak.

image:img/keycloak-one-to-many.png[Keycloak One to Many]

==== Keycloak setup

1. Deploy Keycloak following link:http://keycloak.github.io/docs/userguide/keycloak-server/html/server-installation.html[these instructions]

2. Create the realm configuration file or just copy from UPS template

  cp $UPS_HOME/bin/ups-realm-template.json $UPS_HOME/bin/ups-production-realm.json
  cp $UPS_HOME/bin/ups-realm-template.json $UPS_HOME/bin/ups-dev-realm.json

3. Edit the JSON file template and change the realm name
For example, at _ups-dev-realm.json_ change *"realm": "aerogear"* to *"realm": "aerogear-dev"*.

4. Import the realm configuration file and start WildFly in a separate port

  $UPS_HOME/bin/keycloak-setup.sh --ups-host=http://localhost:8081,http://localhost:8082 --wildfly-offset=3 --realm-import=$UPS_HOME/bin/ups-dev-realm.json,$UPS_HOME/bin/ups-production-realm.json

==== UPS setup

. Follow the setup instructions described link:https://aerogear.org/docs/unifiedpush/ups_userguide/index/#server-installation[here].

. Setup the Keycloak subsystem

.. Under WildFly *development* instance

    $UPS_HOME/bin/ups-setup.sh --subsystem-setup

.. Under WildFly *production* instance

    $UPS_HOME/bin/ups-setup.sh --subsystem-setup

. Setup UPS instance to properly be attached to Keycloak instance


.. Under WildFly development instance

    $UPS_HOME/bin/ups-setup.sh --ups-host=localhost:9991 --realm=aerogear-dev --auth-server=http://localhost:8083

.. Under WildFly production instance

  $UPS_HOME/bin/ups-setup.sh --ups-host=localhost:9992 --realm=aerogear-production --auth-server=http://localhost:8083

. Deploy the UnifiedPush server


=== Scenario 3: Deploying in an already existent realm

The following scenarios applies when people already have Keycloak deployed in their infrastructure and want to have all the setup in a single realm.

*Note:* This is only available on `Keycloak 1.8.x`.

image:img/keycloak-legacy-infrastructure.png[Keycloak with already existent Realm]

==== Keycloak setup

1. Deploy Keycloak following link:http://keycloak.github.io/docs/userguide/keycloak-server/html/server-installation.html[these instructions]

2. Visit http://yourhost/auth/

3. Setup username and password

4. Open the Realm template located at $UPS_HOME/bin and replace `dummyhost`, by your host.

5. Import clients with Partial import

image:img/keycloak-partial-import.png[Partial import]

==== UPS setup

1. Follow the setup instructions described link:https://aerogear.org/docs/unifiedpush/ups_userguide/index/#server-installation[here].

2. Setup the Keycloak subsystem

  $UPS_HOME/bin/ups-setup.sh --subsystem-setup

3. Start WildFly in a separate port

  $WILDFLY_HOME/bin/standalone.sh -Djboss.socket.binding.port-offset=2 --server-config=standalone-full.xml

4. Setup UPS instance to properly be attached to Keycloak instance

  $UPS_HOME/bin/ups-setup.sh --ups-host=localhost:9992 --realm=master --auth-server=http://localhost:8083

5. Deploy the UnifiedPush server
