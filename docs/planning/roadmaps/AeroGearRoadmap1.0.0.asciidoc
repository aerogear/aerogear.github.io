---
layout: basic
title: Roadmap
---

AeroGear 1.0.0 Roadmap - DRAFT
==============================
:Author: Jay Balunas

Releases
--------

Milestone releases are time-boxed at 6 weeks and include the tagging and release (maven central, download in git, etc...) of all repositories that are release ready.  See detailed release procedure documentation for specifics on the release process 

*TODO* Link to release procedure

Sub-Repo Versioning
~~~~~~~~~~~~~~~~~~~

Individual modules/repositories in AeroGear are versioned separately from the overall AeroGear release version.  A version matrix will be provided as part of the release, and on the main project pages.

1.0.0.M5
~~~~~~~~
Release Date: August 15th 2012

Features:

* New Awestruct site
** site & docs migration
* AeroGear Controller 
** <version>
* JS Client library
** <version>
* Security integration
** Authentication
*** Possibly controller & JS lib
** Authorization (user/role)
*** Controller only
** DS/Picketlink security 
*** TBD on what is possible
* JBoss Toy Store
** Cordova & web repos in AeroGear
* POH5 removed
* AS-* bug fixes & integration 

1.0.0.M6
~~~~~~~~
Release Date: Late October 2012

Features:

* AreoGear Controller 
** <version>
* JS client library
** <version>
* iOS/Android client library
** TBD if possible
* Security integration
** TBD
* TODO example
** <version>
* Final updates for AS-*
** JDF BOM & update sync required

1.0.0.M7
~~~~~~~~
Release Date: Late December 2012

Features:

* AreoGear Controller 
** <version>
* JS client library
** <version>
* iOS/Android client library
** TBD if possible
* Security integration
** TBD
* TODO example
** <version>

1.0.0.CR1
~~~~~~~~
Release Date: Mid January 2013

Features:

* Functionally complete
* AreoGear Controller 
** 1.0.0.CR1
* JS client library
** 1.0.0.CR1
* iOS/Android client library
** May not be a "CR" for release
** TBD if possible
* Security integration
** TBD
* TODO example
** 1.0.0.CR1

1.0.0.CR2/Final
~~~~~~~~~~~~~~~
Release Date: February 2013

Features:

* Functionally complete
* AreoGear Controller 
** 1.0.0.CR2/Final
* JS client library
** 1.0.0.CR2/Final
* iOS/Android client library
** May not be a "CR" for release
** TBD if possible
* TODO example
** 1.0.0.CR2/Final


Functionality Details
---------------------

Each primary functional area has its own requirements, roadmap, and use-case document.  These are linked below, and can be seen visually in this diagram:

image:img/aerogear_overview.jpeg[AeroGear Overview]

Each client library will have requirements for persistence, security, messaging, sync, etc....  All common requirements across all libraries will be covered in the respective orthogonal documents.  Additionally, specific planned API and functionality for a given client library will be covered in that client libraries document.  The goal is to have little duplicate information between documents.

AeroGear Deliverables
~~~~~~~~~~~~~~~~~~~~~

__AeroGear JavaScript Library__

* Primary deliverables:
** *aerogear.js*
** Installation and API documentation
** Example application integration & documentation
** JBoss Tools template application
* Requirements: link:../AeroGearJS[AeroGear JS Planning]
* Git repository: link:https://github.com/aerogear/aerogear-js[/aerogear-js]
* Documentation: link:https://github.com/aerogear/aerogear-js/blob/master/README.md[/README.md]

__AeroGear iOS Library__

* Primary deliverables:
** *aerogear.dmg* (XCode installable framework)
** Installation and API documentation
** Example application integration & documentation
** XCode template application
* Requirements: link:../AeroGeariOS[AeroGear iOS Planning]
* Git repository: link:https://github.com/aerogear/aerogear-ios[/aerogear-ios]
* Documentation: link:https://github.com/aerogear/aerogear-ios/blob/master/README.md[/README.md] (TBD)

__AeroGear Android Library__

* Primary deliverables:
** *aerogear.jar* (Android SDK library)
** Installation and API documentation
** Example application integration & documentation
** Android SDK template application
* Requirements: link:../AeroGearAndroid[AeroGear Android Planning]
* Git repository: link:https://github.com/aerogear/aerogear-android[/aerogear-android]
* Documentation: link:https://github.com/aerogear/aerogear-android/blob/master/README.md[/README.md] (TBD)

__AeroGear Controller__

* Primary deliverables:
** *aerogear-controller.jar*
** Installation, functionality, and API documentation
** Example application integration & documentation
** JBoss Tools template application
* Requirements: link:../AeroGearController[AeroGear Controller Planning]
* Git repository: link:https://github.com/aerogear/aerogear-controller[/aerogear-controller]
* Documentation: link:https://github.com/aerogear/aerogear-controller/blob/master/README.md[/README.md]

AeroGear Orthogonal Concerns
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* AeroGear Persistence
** Requirements: link:../AeroGearPersistence[AeroGear Persistence Planning]

* AeroGear Security *
** Requirements: link:../AeroGearSecurity[AeroGear Security Planning]

* AeroGear Connectivity
** Requirements: link:../AeroGearConnectivity[AeroGear Connectivity Planning]

* AeroGear Server Integration Hooks
** Requirements: link:../AeroGearServerHooks[AeroGear Server Integration Planning]

Document Of Record
~~~~~~~~~~~~~~~~~~

It is important to note that these documents are use-cases, roadmaps, plans, etc...  These are not final API documentation.  Each functional piece (controller, client lib, etc...) will contain its own final API documentation.  As functionality is completed parts of these documents may move to the API documentation, or be updated, but these are not the *Documents of Record* for implemented functionality.

Futures and/or Needs Attention
------------------------------

__AeroGear Cordova Plugin Package__

* A package of plugins for Apache Cordova using the AeroGear libraries to enable rapid integration of features.

__Forge Plugins__

* HTML5/Mobile plugin completion
** w/wo AeroGear controller
* Client library generation
* Security integration plugin

__Arquillian__

* Working with existing Arquillian projects to optimize for mobile and JS testing
* TBD

__JBoss Tools Integration__

* TBD

__Future Device Support__

* Windows Phone
* BlackBerry (?)