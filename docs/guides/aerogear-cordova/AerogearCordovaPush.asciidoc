---
layout: basic
title: AeroGear Cordova Push
---

== AeroGear Cordova Push Plugin

The AeroGear Cordova Push Plugin is an extension of the standard Cordova Push Plugin the difference is that it's
that it supports AeroGears Unified Push better and that makes that there is less boiler plate to take care of in
your javascript.

Before we start please install link:https://github.com/apache/cordova-cli/[Apache Cordova CLI], which is the command
line tool to build, deploy and manage Cordova-based applications.

Also have a the message accounts setup and configured in the UnifiedPush Server

* link:/docs/guides/aerogear-push-cordova-android/[Setup for android]
* link:/docs/guides/aerogear-push-cordova-ios/[Setup for ios]

=== Example

Now let's see how to receive push notifications, first create a new project with cordova and install the plugin

[source,c]
----
cordova create <app name>
cd <app name>
cordova platform add android
cordova platform add ios
cordova plugin add https://github.com/aerogear/aerogear-pushplugin-cordova.git
----

This plugin will take care of all the platform depended things so you don't have to worry about that in your javascript code.
First call register to register this device to the Unified Push server with the specified variant.

[source,javascript]
----
var aeroConfig = {
  senderID: "<senderID>",
  pushServerURL: "<pushServerURL>",
  variantID: "<variantID>",
  variantSecret: "<variantSecret>"
}

push.register(successHandler, errorHandler, {"badge": "true", "sound": "true",
    "alert": "true", "ecb": "onNotification", aeroConfig: aeroConfig});

----

In the code above we see that a string _onNotification_ is passed this is the name of the callback function that is going
to get invoked when a message is received. The most basic implementation of this function is the following:

[source,javascript]
----
function onNotification(e) {
    alert(e.alert);
}
----

Now an alert like this doesn't look very nice you proberly want to do something else.